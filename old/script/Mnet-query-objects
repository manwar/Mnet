#!/usr/bin/perl

=head1 NAME

Mnet::script::Mnet-query-objects - network automation script

=cut

# Copyright 2006, 2013-2014 Michael J. Menza Jr.
# Refer to `perldoc Mnet` for more information.

=head1 SYNOPSIS

Usage examples:

 Mnet-query-objects \
    --db-name mnet.db \
    --query-object 'local*'
    --query-sev 6 \
    --query-info '*serial*'

=head1 DESCRIPTION

This script queries the mnet database alert table for objects matching
the command line query specifications and outputs summary object data
to the user terminal.

Refer to the Mnet::Model documentation object_query function for a list
of valid inputs. Prefix each input with query on the command line, such
as --query-object, --query-sev, etc.

The output will be in the format:

    <object>, <count> alert(s), sev <worst>: <text>

The --query-info config setting will match against 'sev <worst>: <text>'

=cut

# use modules
use warnings;
use strict;
use Mnet;
use Mnet::Model;
use Mnet::Silent;

# read config
my $cfg = &config({
    'main-version'  => '+++VERSION+++',
});

# read object arg
die "usage: $0 --db-name <db> [ --query-object <object> ] ...\n"
    if not defined $cfg->{'db-name'};

# move query config settings to input hash
my $input = {};
foreach my $key (keys %$cfg) {
    next if $key !~ /query-(\S+)/;
    $input->{$1} = $cfg->{$key};
}

# retrieve object info
my $objects = &object_query($input);

# output matching object database info
foreach my $item (@$objects) {
    my ($object, $info) = ('undef', 'undef');
    my $object = $item->{'object'};
    my $info = $item->{'info'};
    print "$object, $info\n";
}

# finished;
exit;



=head1 COPYRIGHT AND LICENSE

Copyright 2006, 2013-2014 Michael J. Menza Jr.
Refer to `perldoc Mnet` for more information.

=head1 SEE ALSO

Mnet, Mnet::Model

=cut

