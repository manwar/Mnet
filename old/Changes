
2014-02-06 - Mnet-v4.1.0

- new Mnet-test script, testing framework for user automation scripts
    allows for regression testing of multiple Mnet script scenarions
    handles record/replay of Mnet::Expect, Mnet::SNMP, and Mnet::Ping sessions
    refer to `perldoc Mnet::script::Mnet-test` for more information

- added Mnet::Expect::IOS to distribution, handling many cisco specific tasks
    push enable config commands, and optional backout commands on errors
    copy and delete files, immediate and scheduled reloads, ping, and write mem
    parse show ver, run and int commands, parse and modify config stanzas

- Mnet::Expect --expect-record and --expect-replay work for multiple sessions
    command line record/replay handles multiple device connections from script

- Mnet::Expect will now gracefully handle missing expect-command substitutions
    shell user is used if --expect-username missing for default ssh attempts
    notification issued if other expect-command substitutions are missing

- Mnet::Expect new --expect-login forces login without username or password
    otherwise would connect directly to spawned expect-command without login

- Mnet perl tests will fail if standard perl or Mnet modules are missing

- minor documentation fixes and clarification updates


2014-01-09 - Mnet-v4.0.1

- initial open source release of Mnet perl network automation scripting module
    - based on prior Greenspeed Networks, Inc. network management software

- the following features are fully operational:
    - log, debug, alert, and error output to stdout, device files, or database
    - batch mode to concurrently process a list of devices using a list file
    - flexible config settings via command line, system, and/or batch list
    - reliably automate ssh/telnet/bastion cisco ios sessions, flexible auth
    - record and replay command line sessions, allowing for regression testing
    - output .csv report data or view from database web server 
    - ping and snmp functions, customizable polling alerts and graphs
    - polling module for basic uptime and interface monitoring and untilization
    - web server can be used to view output log, alert, report and graph data

