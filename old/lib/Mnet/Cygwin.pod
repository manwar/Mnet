=head1 NAME

Mnet::Cygwin - network automation scripting cygwin readme

=head1 SYNOPSIS

Cygwin is a collection of tools that provide a linux-like environment
for Microsoft Windows. Cygwin emulates the linux api.

This document describes how to install and setup Cygin to work with
the Mnet perl network automation scripting tools. Also included are
steps to use CPAN to install several necessary perl modules.

When finished there will be a Cygwin Terminal icon in Windows that
will start a fully functional bash shell.

=head1 PREPARATION

The main Cywin website is http://www.cygwin.com and contains more
information about Cygwin.

Cygwin can be installed in Windows as a normal user account, admin
rights are not required for our purposes.

However it is necessary to choose two directories - a Cygwin program
directory and a Cygwin local package directory. Your Windows account
will need to have permission to create both of these directories in
the location you specify. Possible locations are in the root directory
of you Windows drive, in Program Files, under c:/windows, on your
desktop, or in a temp directory. Any of these can work.

The Cygwin program directory will contain the linux filesystem, which
includes root directories such as bin, home, var, etc. Note that will
be able to access these Cygwin linux directories from windows. You
are also able to access your windows directories from Cygwin via the
linux path /cygdrive where there will be a subdirectory for each
windows drive letter.

The local package directory is used by the setup program to download
installation packages before copying them to the Cygwin program
directory. This directory can be deleted after the cygin setup is
complete, but it may be convenient to leave behind in case there is
a need to re-run the setup program - to add packages or to perform
upgrades.

A gigabyte of free space is enough for the Cygwin install and to have
room to work in afterwards.

=head1 CYGWIN INSTALLATION

This installation walkthrough has been prepared for Cygwin version
1.7.17-1. The newest version of Cygwin is always available from the
main Cywin website at http://www.cygwin.com.

Run the 'setup.exe' program from the link on the main Cygwin website
to install or upgrade Cygwin on a computer running Windows.

On the first 'Cygwin Setup' window click 'Next' to begin the install.

On the 'Choose Installation Type' window leave 'Install from Internet'
selected then click "Next' to continue.

On the 'Choose Installation Directory' window enter the path for Cygin
to install its linux filesystem under. The default 'c:/cygwin' is 
good if your Windows user account has permission to create that
directory. Other alternatives are 'c:/windows/cygwin' or a Cygwin
folder on your desktop. The 'Install For' option should be changed
to 'Just Me' if you do not have Admin rights on Windows.

On the 'Select Local Package Directory' window enter the path that
Cygwin will use to store downloaded package files during the rest of
the setup program execution. The path 'c:/cygwin.packages' is good
if your Windows user account has permission to create that directory.
Other alternatives are 'c:/windows/cygwin.packages', or a folder on
your desktop.

Answer 'yes' to create the local package directory if an error
window appears that the directory does not yet exist.

In the 'Select Connection Type' window choose the way that Cygin
needs to access the internet in order to download setup packages. If
unsure, choose the option 'Use Internet Explorer Proxy Settings' then
click 'Next'.

On the 'Choose Download Site(s)' window choose one or more sites for
Cygwin to download setup packages from. Try to choose sites that may
be nearby for better download speeds. Then click 'Next'.

A 'Progress' window will appear where attempts to download some
setup information from the selected download sites. If all goes well
the next window will automatically appear.

The 'Select Packages' window should appear, allowing for you to
choose what packages you want installed in your linux environment.
A lot of packages are available. All package subcategories are
initially set to 'default'. Leave them as default. We will choose
additional packages to install. For each of the following listed
subcategory/packages click once on 'skip' for that package to
install the latest version:

    admin/cron
    admin/cygrunsrv
    archive/unzip
    archive/zip
    database/perl-DBI
    database/sqlite3
    devel/binutils
    devel/gcc-core
    devel/gcc-g++
    devel/gcc-mingw-core
    devel/gcc-mingw-g++
    devel/make
    devel/patchutils
    devel/subversion
    docs/perl_manpages
    editors/vim
    interpreters/perl
    net/curl
    net/inetutils
    net/ncftp
    net/openssh
    net/ping
    net/tftp
    net/rsync
    perl/patcher
    perl/perl-IO-Tty
    system/util-linux
    tcl/expect
    utils/gnupg
    utils/patch
    web/wget
    web/wput

And finally, for those familiar with a linux environment, any other
desired packages can be installed - such as editors, x11, etc.

A 'Resolving Dependecies' window will appear next. Click 'Next' to
allow Cygwin to select the required packages to resolve dependencies.

A 'Cygwin Setup' window will appear next showing download and install
progress. The time this will take to complete depends on internet
connection speeds.

At the end of the setup allow cygwin to create program icons on the
Desktop and Start Menu.

When finished there will be a Cygwin group under Programs on the
Start menu. The Cygwin Terminal icon in this group can be used to
get a linux bash prompt.

=head1 CPAN MODULES

CPAN stands for Comprehensive Perl Archive Network. CPAN is a repository
that can be used to install perl modules. Mnet is designed to work with
several popular perl modules, providing enhanced functionality such as
control over ssh and telnet sessions, database logging and reporting,
ping and snmp monitoring, utilization graphs and a web page interface.

Cygwin perl comes with the 'cpan' program that can be used to install
perl modules from the cpan repository. The cpan program is able to
configure itself automatically, for the most part.

Start a Cygwin Terminal bash prompt.

Note that the cpan program needs to access the internet. By default it
expects a direct connection to the internet. If you are using a proxy
to access the internet, enter the following bash commands: 

    export http_proxy=http://myproxy.domain.com:8080
    export ftp_proxy=http://myproxy.domain.com:8080

Enter the command 'cpan' to get started.

Answer 'yes' to configure as much as possible automatically.

Hit the enter key and accept all defaults. Eventually you should get a
cpan prompt.

Enter the cpan command 'install <module>' to install a perl module. The
cpan utility will then download, build, and install the specified perl
module. Enter the cpan install command for the following modules:

 Expect                     for telnet and ssh automation
 Mojolicious                for web front end
 Net::Ping::External        for default non-root external ping
 Net::Telnet                for telnet access from perl

Enter the 'quit' command in the cpan program when finished.

The Expect module is the most important, allowing the Mnet network perl
scripting module to provide ssh and telnet access to network devices.

Note that the Mnet perl module can make use of a number of other perl
modules for additional functionality - such as database logging,
utilization graphs and a web server to view all data. The Mnet::Readme
document http://menzascripting.com/Documentation/README contains a
list of these perl modules. It may be the case where cpan on cygwin
cannot install all of the desired modules, or modules exist that are
not available in cpan. Source code for these modules may be downloaded
from the internet and installed manually, if desired.

=head1 WHAT NEXT

Visit http://menzascripting.com/Mnet/Download and download the
latest version of the Mnet-X.Y-tar.gz distribution file to your
cygwin /home user subdirectory.

Visit http://menzascripting.com/Mnet/Documentation and refer to
the Mnet::README document for instructions on how to install the Mnet
perl module.

Also refer to the Mnet::Tutorial document for information on basic
usage of the Mnet network scripting perl module. It is very easy to
log into devices, gather data, log progress and report on a list of
target network devices.

=head1 COPYRIGHT AND LICENSE

Copyright 2006, 2013-2014 Michael J. Menza Jr.
Refer to `perldoc Mnet` for more information.

=head1 SEE ALSO

Mnet, Mnet::Tutorial

=cut
